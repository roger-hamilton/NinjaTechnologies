//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace NinjaTechnolgies.MethodIntegration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MethodAPIActionChargeCreditCard_ElectraCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionChargeCreditCard_ElectraCashV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionChargeCreditCard_PsiGateOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionChargeCreditCard_PsiGateV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionChargePaymentGatewayOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionRefundCreditCard_ElectraCashV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionRefundCreditCard_PsiGateV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionRefundPaymentGatewayOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionSendEmailV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionSendEmailV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionSendToDesktopOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIActionSendToDesktopV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIGetCSSOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIGetScreenURLV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIGetScreenURLV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIGetScreenURLV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPISmartVaultEnumerateDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateFieldV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateMethodAccountV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateMethodAccountV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateTableV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIFieldListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIFieldListV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPITableListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPITableListV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIAppointment_CopySeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIAppointment_InsertDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateMethodTabGroupRoleV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateMethodTabV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPICreateMethodUserV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIDeleteV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIDeleteMethodTabLinkV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIFieldServiceTimeEntryV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIInsertV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIInsertFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPISelect_DataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPISelect_DataSetV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPISelect_XMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPISelect_XMLV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIUpdateV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MethodAPIUpdateFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::NinjaTechnolgies.Properties.Settings.Default.NinjaTechnolgies_MethodIntegration_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MethodAPIActionChargeCreditCard_ElectraCashCompletedEventHandler MethodAPIActionChargeCreditCard_ElectraCashCompleted;
        
        /// <remarks/>
        public event MethodAPIActionChargeCreditCard_ElectraCashV2CompletedEventHandler MethodAPIActionChargeCreditCard_ElectraCashV2Completed;
        
        /// <remarks/>
        public event MethodAPIActionChargeCreditCard_PsiGateCompletedEventHandler MethodAPIActionChargeCreditCard_PsiGateCompleted;
        
        /// <remarks/>
        public event MethodAPIActionChargeCreditCard_PsiGateV2CompletedEventHandler MethodAPIActionChargeCreditCard_PsiGateV2Completed;
        
        /// <remarks/>
        public event MethodAPIActionChargePaymentGatewayCompletedEventHandler MethodAPIActionChargePaymentGatewayCompleted;
        
        /// <remarks/>
        public event MethodAPIActionRefundCreditCard_ElectraCashV2CompletedEventHandler MethodAPIActionRefundCreditCard_ElectraCashV2Completed;
        
        /// <remarks/>
        public event MethodAPIActionRefundCreditCard_PsiGateV2CompletedEventHandler MethodAPIActionRefundCreditCard_PsiGateV2Completed;
        
        /// <remarks/>
        public event MethodAPIActionRefundPaymentGatewayCompletedEventHandler MethodAPIActionRefundPaymentGatewayCompleted;
        
        /// <remarks/>
        public event MethodAPIActionSendEmailCompletedEventHandler MethodAPIActionSendEmailCompleted;
        
        /// <remarks/>
        public event MethodAPIActionSendEmailV2CompletedEventHandler MethodAPIActionSendEmailV2Completed;
        
        /// <remarks/>
        public event MethodAPIActionSendEmailV3CompletedEventHandler MethodAPIActionSendEmailV3Completed;
        
        /// <remarks/>
        public event MethodAPIActionSendToDesktopCompletedEventHandler MethodAPIActionSendToDesktopCompleted;
        
        /// <remarks/>
        public event MethodAPIActionSendToDesktopV2CompletedEventHandler MethodAPIActionSendToDesktopV2Completed;
        
        /// <remarks/>
        public event MethodAPIGetCSSCompletedEventHandler MethodAPIGetCSSCompleted;
        
        /// <remarks/>
        public event MethodAPIGetScreenURLV2CompletedEventHandler MethodAPIGetScreenURLV2Completed;
        
        /// <remarks/>
        public event MethodAPIGetScreenURLV3CompletedEventHandler MethodAPIGetScreenURLV3Completed;
        
        /// <remarks/>
        public event MethodAPIGetScreenURLV4CompletedEventHandler MethodAPIGetScreenURLV4Completed;
        
        /// <remarks/>
        public event MethodAPISmartVaultEnumerateDocumentsCompletedEventHandler MethodAPISmartVaultEnumerateDocumentsCompleted;
        
        /// <remarks/>
        public event MethodAPICreateFieldCompletedEventHandler MethodAPICreateFieldCompleted;
        
        /// <remarks/>
        public event MethodAPICreateFieldV2CompletedEventHandler MethodAPICreateFieldV2Completed;
        
        /// <remarks/>
        public event MethodAPICreateMethodAccountV2CompletedEventHandler MethodAPICreateMethodAccountV2Completed;
        
        /// <remarks/>
        public event MethodAPICreateMethodAccountV3CompletedEventHandler MethodAPICreateMethodAccountV3Completed;
        
        /// <remarks/>
        public event MethodAPICreateTableCompletedEventHandler MethodAPICreateTableCompleted;
        
        /// <remarks/>
        public event MethodAPICreateTableV2CompletedEventHandler MethodAPICreateTableV2Completed;
        
        /// <remarks/>
        public event MethodAPIFieldListCompletedEventHandler MethodAPIFieldListCompleted;
        
        /// <remarks/>
        public event MethodAPIFieldListV2CompletedEventHandler MethodAPIFieldListV2Completed;
        
        /// <remarks/>
        public event MethodAPITableListCompletedEventHandler MethodAPITableListCompleted;
        
        /// <remarks/>
        public event MethodAPITableListV2CompletedEventHandler MethodAPITableListV2Completed;
        
        /// <remarks/>
        public event MethodAPIAppointment_CopySeriesCompletedEventHandler MethodAPIAppointment_CopySeriesCompleted;
        
        /// <remarks/>
        public event MethodAPIAppointment_InsertDateCompletedEventHandler MethodAPIAppointment_InsertDateCompleted;
        
        /// <remarks/>
        public event MethodAPICreateMethodTabGroupRoleV2CompletedEventHandler MethodAPICreateMethodTabGroupRoleV2Completed;
        
        /// <remarks/>
        public event MethodAPICreateMethodTabV2CompletedEventHandler MethodAPICreateMethodTabV2Completed;
        
        /// <remarks/>
        public event MethodAPICreateMethodUserV2CompletedEventHandler MethodAPICreateMethodUserV2Completed;
        
        /// <remarks/>
        public event MethodAPIDeleteCompletedEventHandler MethodAPIDeleteCompleted;
        
        /// <remarks/>
        public event MethodAPIDeleteV2CompletedEventHandler MethodAPIDeleteV2Completed;
        
        /// <remarks/>
        public event MethodAPIDeleteMethodTabLinkV2CompletedEventHandler MethodAPIDeleteMethodTabLinkV2Completed;
        
        /// <remarks/>
        public event MethodAPIFieldServiceTimeEntryV2CompletedEventHandler MethodAPIFieldServiceTimeEntryV2Completed;
        
        /// <remarks/>
        public event MethodAPIInsertCompletedEventHandler MethodAPIInsertCompleted;
        
        /// <remarks/>
        public event MethodAPIInsertV2CompletedEventHandler MethodAPIInsertV2Completed;
        
        /// <remarks/>
        public event MethodAPIInsertFileCompletedEventHandler MethodAPIInsertFileCompleted;
        
        /// <remarks/>
        public event MethodAPISelect_DataSetCompletedEventHandler MethodAPISelect_DataSetCompleted;
        
        /// <remarks/>
        public event MethodAPISelect_DataSetV2CompletedEventHandler MethodAPISelect_DataSetV2Completed;
        
        /// <remarks/>
        public event MethodAPISelect_XMLCompletedEventHandler MethodAPISelect_XMLCompleted;
        
        /// <remarks/>
        public event MethodAPISelect_XMLV2CompletedEventHandler MethodAPISelect_XMLV2Completed;
        
        /// <remarks/>
        public event MethodAPIUpdateCompletedEventHandler MethodAPIUpdateCompleted;
        
        /// <remarks/>
        public event MethodAPIUpdateV2CompletedEventHandler MethodAPIUpdateV2Completed;
        
        /// <remarks/>
        public event MethodAPIUpdateFileCompletedEventHandler MethodAPIUpdateFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionChargeCreditCard_ElectraCash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionChargeCreditCard_ElectraCash(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    ref string strGatewayResponse, 
                    ref string strGatewayApproved, 
                    string strGateway, 
                    string strGatewayMerchantID, 
                    string strGatewayAuthKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayECAccountNumber, 
                    string strGatewayECRoutingNumber, 
                    string strGatewayECBankType, 
                    string strGatewayCustomerTotal, 
                    string strGatewayProductID) {
            object[] results = this.Invoke("MethodAPIActionChargeCreditCard_ElectraCash", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strGatewayResponse,
                        strGatewayApproved,
                        strGateway,
                        strGatewayMerchantID,
                        strGatewayAuthKey,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayECAccountNumber,
                        strGatewayECRoutingNumber,
                        strGatewayECBankType,
                        strGatewayCustomerTotal,
                        strGatewayProductID});
            strGatewayResponse = ((string)(results[1]));
            strGatewayApproved = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_ElectraCashAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strGatewayResponse, 
                    string strGatewayApproved, 
                    string strGateway, 
                    string strGatewayMerchantID, 
                    string strGatewayAuthKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayECAccountNumber, 
                    string strGatewayECRoutingNumber, 
                    string strGatewayECBankType, 
                    string strGatewayCustomerTotal, 
                    string strGatewayProductID) {
            this.MethodAPIActionChargeCreditCard_ElectraCashAsync(strCompanyAccount, strLogin, strPassword, strGatewayResponse, strGatewayApproved, strGateway, strGatewayMerchantID, strGatewayAuthKey, strGatewayCustomerName, strGatewayCustomerAddress, strGatewayCustomerCity, strGatewayCustomerState, strGatewayCustomerZipCode, strGatewayCustomerEmail, strGatewayCustomerCountry, strGatewayCustomerSubTotal, strGatewayCustomerTax, strGatewayECAccountNumber, strGatewayECRoutingNumber, strGatewayECBankType, strGatewayCustomerTotal, strGatewayProductID, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_ElectraCashAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strGatewayResponse, 
                    string strGatewayApproved, 
                    string strGateway, 
                    string strGatewayMerchantID, 
                    string strGatewayAuthKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayECAccountNumber, 
                    string strGatewayECRoutingNumber, 
                    string strGatewayECBankType, 
                    string strGatewayCustomerTotal, 
                    string strGatewayProductID, 
                    object userState) {
            if ((this.MethodAPIActionChargeCreditCard_ElectraCashOperationCompleted == null)) {
                this.MethodAPIActionChargeCreditCard_ElectraCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionChargeCreditCard_ElectraCashOperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionChargeCreditCard_ElectraCash", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strGatewayResponse,
                        strGatewayApproved,
                        strGateway,
                        strGatewayMerchantID,
                        strGatewayAuthKey,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayECAccountNumber,
                        strGatewayECRoutingNumber,
                        strGatewayECBankType,
                        strGatewayCustomerTotal,
                        strGatewayProductID}, this.MethodAPIActionChargeCreditCard_ElectraCashOperationCompleted, userState);
        }
        
        private void OnMethodAPIActionChargeCreditCard_ElectraCashOperationCompleted(object arg) {
            if ((this.MethodAPIActionChargeCreditCard_ElectraCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionChargeCreditCard_ElectraCashCompleted(this, new MethodAPIActionChargeCreditCard_ElectraCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionChargeCreditCard_ElectraCashV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionChargeCreditCard_ElectraCashV2(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayMerchantID, 
                    string strGatewayAuthKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayECAccountNumber, 
                    string strGatewayECRoutingNumber, 
                    string strGatewayECBankType, 
                    string strGatewayCustomerTotal, 
                    string strGatewayProductID) {
            object[] results = this.Invoke("MethodAPIActionChargeCreditCard_ElectraCashV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayMerchantID,
                        strGatewayAuthKey,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayECAccountNumber,
                        strGatewayECRoutingNumber,
                        strGatewayECBankType,
                        strGatewayCustomerTotal,
                        strGatewayProductID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_ElectraCashV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayMerchantID, 
                    string strGatewayAuthKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayECAccountNumber, 
                    string strGatewayECRoutingNumber, 
                    string strGatewayECBankType, 
                    string strGatewayCustomerTotal, 
                    string strGatewayProductID) {
            this.MethodAPIActionChargeCreditCard_ElectraCashV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strGateway, strGatewayMerchantID, strGatewayAuthKey, strGatewayCustomerName, strGatewayCustomerAddress, strGatewayCustomerCity, strGatewayCustomerState, strGatewayCustomerZipCode, strGatewayCustomerEmail, strGatewayCustomerCountry, strGatewayCustomerSubTotal, strGatewayCustomerTax, strGatewayECAccountNumber, strGatewayECRoutingNumber, strGatewayECBankType, strGatewayCustomerTotal, strGatewayProductID, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_ElectraCashV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayMerchantID, 
                    string strGatewayAuthKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayECAccountNumber, 
                    string strGatewayECRoutingNumber, 
                    string strGatewayECBankType, 
                    string strGatewayCustomerTotal, 
                    string strGatewayProductID, 
                    object userState) {
            if ((this.MethodAPIActionChargeCreditCard_ElectraCashV2OperationCompleted == null)) {
                this.MethodAPIActionChargeCreditCard_ElectraCashV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionChargeCreditCard_ElectraCashV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionChargeCreditCard_ElectraCashV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayMerchantID,
                        strGatewayAuthKey,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayECAccountNumber,
                        strGatewayECRoutingNumber,
                        strGatewayECBankType,
                        strGatewayCustomerTotal,
                        strGatewayProductID}, this.MethodAPIActionChargeCreditCard_ElectraCashV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionChargeCreditCard_ElectraCashV2OperationCompleted(object arg) {
            if ((this.MethodAPIActionChargeCreditCard_ElectraCashV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionChargeCreditCard_ElectraCashV2Completed(this, new MethodAPIActionChargeCreditCard_ElectraCashV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionChargeCreditCard_PsiGate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionChargeCreditCard_PsiGate(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    ref string strGatewayResponse, 
                    ref string strGatewayApproved, 
                    string strGateway, 
                    string strGatewayUserName, 
                    string strGatewayPassword, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayCustomerTotal) {
            object[] results = this.Invoke("MethodAPIActionChargeCreditCard_PsiGate", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strGatewayResponse,
                        strGatewayApproved,
                        strGateway,
                        strGatewayUserName,
                        strGatewayPassword,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerCVV,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayCustomerTotal});
            strGatewayResponse = ((string)(results[1]));
            strGatewayApproved = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_PsiGateAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strGatewayResponse, 
                    string strGatewayApproved, 
                    string strGateway, 
                    string strGatewayUserName, 
                    string strGatewayPassword, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayCustomerTotal) {
            this.MethodAPIActionChargeCreditCard_PsiGateAsync(strCompanyAccount, strLogin, strPassword, strGatewayResponse, strGatewayApproved, strGateway, strGatewayUserName, strGatewayPassword, strGatewayCustomerName, strGatewayCustomerAddress, strGatewayCustomerCity, strGatewayCustomerState, strGatewayCustomerZipCode, strGatewayCustomerEmail, strGatewayCustomerCountry, strGatewayCustomerCVV, strGatewayCustomerSubTotal, strGatewayCustomerTax, strGatewayCustomerCreditCardNumber, strGatewayCustomerExpiryMonth, strGatewayCustomerExpiryYear, strGatewayCustomerTotal, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_PsiGateAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strGatewayResponse, 
                    string strGatewayApproved, 
                    string strGateway, 
                    string strGatewayUserName, 
                    string strGatewayPassword, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayCustomerTotal, 
                    object userState) {
            if ((this.MethodAPIActionChargeCreditCard_PsiGateOperationCompleted == null)) {
                this.MethodAPIActionChargeCreditCard_PsiGateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionChargeCreditCard_PsiGateOperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionChargeCreditCard_PsiGate", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strGatewayResponse,
                        strGatewayApproved,
                        strGateway,
                        strGatewayUserName,
                        strGatewayPassword,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerCVV,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayCustomerTotal}, this.MethodAPIActionChargeCreditCard_PsiGateOperationCompleted, userState);
        }
        
        private void OnMethodAPIActionChargeCreditCard_PsiGateOperationCompleted(object arg) {
            if ((this.MethodAPIActionChargeCreditCard_PsiGateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionChargeCreditCard_PsiGateCompleted(this, new MethodAPIActionChargeCreditCard_PsiGateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionChargeCreditCard_PsiGateV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionChargeCreditCard_PsiGateV2(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserName, 
                    string strGatewayPassword, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayCustomerTotal) {
            object[] results = this.Invoke("MethodAPIActionChargeCreditCard_PsiGateV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserName,
                        strGatewayPassword,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerCVV,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayCustomerTotal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_PsiGateV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserName, 
                    string strGatewayPassword, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayCustomerTotal) {
            this.MethodAPIActionChargeCreditCard_PsiGateV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strGateway, strGatewayUserName, strGatewayPassword, strGatewayCustomerName, strGatewayCustomerAddress, strGatewayCustomerCity, strGatewayCustomerState, strGatewayCustomerZipCode, strGatewayCustomerEmail, strGatewayCustomerCountry, strGatewayCustomerCVV, strGatewayCustomerSubTotal, strGatewayCustomerTax, strGatewayCustomerCreditCardNumber, strGatewayCustomerExpiryMonth, strGatewayCustomerExpiryYear, strGatewayCustomerTotal, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionChargeCreditCard_PsiGateV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserName, 
                    string strGatewayPassword, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayCustomerTotal, 
                    object userState) {
            if ((this.MethodAPIActionChargeCreditCard_PsiGateV2OperationCompleted == null)) {
                this.MethodAPIActionChargeCreditCard_PsiGateV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionChargeCreditCard_PsiGateV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionChargeCreditCard_PsiGateV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserName,
                        strGatewayPassword,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerCVV,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayCustomerTotal}, this.MethodAPIActionChargeCreditCard_PsiGateV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionChargeCreditCard_PsiGateV2OperationCompleted(object arg) {
            if ((this.MethodAPIActionChargeCreditCard_PsiGateV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionChargeCreditCard_PsiGateV2Completed(this, new MethodAPIActionChargeCreditCard_PsiGateV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionChargePaymentGateway", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionChargePaymentGateway(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserNameOrMerchantID, 
                    string strGatewayPasswordOrKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayACHAccountNumber, 
                    string strGatewayACHRoutingNumber, 
                    string strGatewayACHProductID, 
                    string strGatewayCustomerTotal, 
                    string OverridePostURL) {
            object[] results = this.Invoke("MethodAPIActionChargePaymentGateway", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserNameOrMerchantID,
                        strGatewayPasswordOrKey,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerCVV,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayACHAccountNumber,
                        strGatewayACHRoutingNumber,
                        strGatewayACHProductID,
                        strGatewayCustomerTotal,
                        OverridePostURL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionChargePaymentGatewayAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserNameOrMerchantID, 
                    string strGatewayPasswordOrKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayACHAccountNumber, 
                    string strGatewayACHRoutingNumber, 
                    string strGatewayACHProductID, 
                    string strGatewayCustomerTotal, 
                    string OverridePostURL) {
            this.MethodAPIActionChargePaymentGatewayAsync(strCompanyAccount, strLogin, strPassword, strSessionID, strGateway, strGatewayUserNameOrMerchantID, strGatewayPasswordOrKey, strGatewayCustomerName, strGatewayCustomerAddress, strGatewayCustomerCity, strGatewayCustomerState, strGatewayCustomerZipCode, strGatewayCustomerEmail, strGatewayCustomerCountry, strGatewayCustomerCVV, strGatewayCustomerSubTotal, strGatewayCustomerTax, strGatewayCustomerCreditCardNumber, strGatewayCustomerExpiryMonth, strGatewayCustomerExpiryYear, strGatewayACHAccountNumber, strGatewayACHRoutingNumber, strGatewayACHProductID, strGatewayCustomerTotal, OverridePostURL, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionChargePaymentGatewayAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserNameOrMerchantID, 
                    string strGatewayPasswordOrKey, 
                    string strGatewayCustomerName, 
                    string strGatewayCustomerAddress, 
                    string strGatewayCustomerCity, 
                    string strGatewayCustomerState, 
                    string strGatewayCustomerZipCode, 
                    string strGatewayCustomerEmail, 
                    string strGatewayCustomerCountry, 
                    string strGatewayCustomerCVV, 
                    string strGatewayCustomerSubTotal, 
                    string strGatewayCustomerTax, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayACHAccountNumber, 
                    string strGatewayACHRoutingNumber, 
                    string strGatewayACHProductID, 
                    string strGatewayCustomerTotal, 
                    string OverridePostURL, 
                    object userState) {
            if ((this.MethodAPIActionChargePaymentGatewayOperationCompleted == null)) {
                this.MethodAPIActionChargePaymentGatewayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionChargePaymentGatewayOperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionChargePaymentGateway", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserNameOrMerchantID,
                        strGatewayPasswordOrKey,
                        strGatewayCustomerName,
                        strGatewayCustomerAddress,
                        strGatewayCustomerCity,
                        strGatewayCustomerState,
                        strGatewayCustomerZipCode,
                        strGatewayCustomerEmail,
                        strGatewayCustomerCountry,
                        strGatewayCustomerCVV,
                        strGatewayCustomerSubTotal,
                        strGatewayCustomerTax,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayACHAccountNumber,
                        strGatewayACHRoutingNumber,
                        strGatewayACHProductID,
                        strGatewayCustomerTotal,
                        OverridePostURL}, this.MethodAPIActionChargePaymentGatewayOperationCompleted, userState);
        }
        
        private void OnMethodAPIActionChargePaymentGatewayOperationCompleted(object arg) {
            if ((this.MethodAPIActionChargePaymentGatewayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionChargePaymentGatewayCompleted(this, new MethodAPIActionChargePaymentGatewayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionRefundCreditCard_ElectraCashV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionRefundCreditCard_ElectraCashV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strGateway, string strGatewayMerchantID, string strGatewayAuthKey, string strGatewayCustomerTotal, string strGatewayOrderID) {
            object[] results = this.Invoke("MethodAPIActionRefundCreditCard_ElectraCashV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayMerchantID,
                        strGatewayAuthKey,
                        strGatewayCustomerTotal,
                        strGatewayOrderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionRefundCreditCard_ElectraCashV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strGateway, string strGatewayMerchantID, string strGatewayAuthKey, string strGatewayCustomerTotal, string strGatewayOrderID) {
            this.MethodAPIActionRefundCreditCard_ElectraCashV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strGateway, strGatewayMerchantID, strGatewayAuthKey, strGatewayCustomerTotal, strGatewayOrderID, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionRefundCreditCard_ElectraCashV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strGateway, string strGatewayMerchantID, string strGatewayAuthKey, string strGatewayCustomerTotal, string strGatewayOrderID, object userState) {
            if ((this.MethodAPIActionRefundCreditCard_ElectraCashV2OperationCompleted == null)) {
                this.MethodAPIActionRefundCreditCard_ElectraCashV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionRefundCreditCard_ElectraCashV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionRefundCreditCard_ElectraCashV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayMerchantID,
                        strGatewayAuthKey,
                        strGatewayCustomerTotal,
                        strGatewayOrderID}, this.MethodAPIActionRefundCreditCard_ElectraCashV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionRefundCreditCard_ElectraCashV2OperationCompleted(object arg) {
            if ((this.MethodAPIActionRefundCreditCard_ElectraCashV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionRefundCreditCard_ElectraCashV2Completed(this, new MethodAPIActionRefundCreditCard_ElectraCashV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionRefundCreditCard_PsiGateV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionRefundCreditCard_PsiGateV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strGateway, string strGatewayUserName, string strGatewayPassword, string strGatewayRefundAmount, string strGatewayOrderID) {
            object[] results = this.Invoke("MethodAPIActionRefundCreditCard_PsiGateV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserName,
                        strGatewayPassword,
                        strGatewayRefundAmount,
                        strGatewayOrderID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionRefundCreditCard_PsiGateV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strGateway, string strGatewayUserName, string strGatewayPassword, string strGatewayRefundAmount, string strGatewayOrderID) {
            this.MethodAPIActionRefundCreditCard_PsiGateV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strGateway, strGatewayUserName, strGatewayPassword, strGatewayRefundAmount, strGatewayOrderID, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionRefundCreditCard_PsiGateV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strGateway, string strGatewayUserName, string strGatewayPassword, string strGatewayRefundAmount, string strGatewayOrderID, object userState) {
            if ((this.MethodAPIActionRefundCreditCard_PsiGateV2OperationCompleted == null)) {
                this.MethodAPIActionRefundCreditCard_PsiGateV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionRefundCreditCard_PsiGateV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionRefundCreditCard_PsiGateV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserName,
                        strGatewayPassword,
                        strGatewayRefundAmount,
                        strGatewayOrderID}, this.MethodAPIActionRefundCreditCard_PsiGateV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionRefundCreditCard_PsiGateV2OperationCompleted(object arg) {
            if ((this.MethodAPIActionRefundCreditCard_PsiGateV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionRefundCreditCard_PsiGateV2Completed(this, new MethodAPIActionRefundCreditCard_PsiGateV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionRefundPaymentGateway", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionRefundPaymentGateway(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserNameOrMerchantID, 
                    string strGatewayPasswordOrKey, 
                    string strGatewayRefundAmount, 
                    string strGatewayOrderID, 
                    string strCreditType, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayACHAccountNumber, 
                    string strGatewayACHRoutingNumber, 
                    string strGatewayTransRefNumber, 
                    string OverridePostURL) {
            object[] results = this.Invoke("MethodAPIActionRefundPaymentGateway", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserNameOrMerchantID,
                        strGatewayPasswordOrKey,
                        strGatewayRefundAmount,
                        strGatewayOrderID,
                        strCreditType,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayACHAccountNumber,
                        strGatewayACHRoutingNumber,
                        strGatewayTransRefNumber,
                        OverridePostURL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionRefundPaymentGatewayAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserNameOrMerchantID, 
                    string strGatewayPasswordOrKey, 
                    string strGatewayRefundAmount, 
                    string strGatewayOrderID, 
                    string strCreditType, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayACHAccountNumber, 
                    string strGatewayACHRoutingNumber, 
                    string strGatewayTransRefNumber, 
                    string OverridePostURL) {
            this.MethodAPIActionRefundPaymentGatewayAsync(strCompanyAccount, strLogin, strPassword, strSessionID, strGateway, strGatewayUserNameOrMerchantID, strGatewayPasswordOrKey, strGatewayRefundAmount, strGatewayOrderID, strCreditType, strGatewayCustomerCreditCardNumber, strGatewayCustomerExpiryMonth, strGatewayCustomerExpiryYear, strGatewayACHAccountNumber, strGatewayACHRoutingNumber, strGatewayTransRefNumber, OverridePostURL, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionRefundPaymentGatewayAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strGateway, 
                    string strGatewayUserNameOrMerchantID, 
                    string strGatewayPasswordOrKey, 
                    string strGatewayRefundAmount, 
                    string strGatewayOrderID, 
                    string strCreditType, 
                    string strGatewayCustomerCreditCardNumber, 
                    string strGatewayCustomerExpiryMonth, 
                    string strGatewayCustomerExpiryYear, 
                    string strGatewayACHAccountNumber, 
                    string strGatewayACHRoutingNumber, 
                    string strGatewayTransRefNumber, 
                    string OverridePostURL, 
                    object userState) {
            if ((this.MethodAPIActionRefundPaymentGatewayOperationCompleted == null)) {
                this.MethodAPIActionRefundPaymentGatewayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionRefundPaymentGatewayOperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionRefundPaymentGateway", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strGateway,
                        strGatewayUserNameOrMerchantID,
                        strGatewayPasswordOrKey,
                        strGatewayRefundAmount,
                        strGatewayOrderID,
                        strCreditType,
                        strGatewayCustomerCreditCardNumber,
                        strGatewayCustomerExpiryMonth,
                        strGatewayCustomerExpiryYear,
                        strGatewayACHAccountNumber,
                        strGatewayACHRoutingNumber,
                        strGatewayTransRefNumber,
                        OverridePostURL}, this.MethodAPIActionRefundPaymentGatewayOperationCompleted, userState);
        }
        
        private void OnMethodAPIActionRefundPaymentGatewayOperationCompleted(object arg) {
            if ((this.MethodAPIActionRefundPaymentGatewayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionRefundPaymentGatewayCompleted(this, new MethodAPIActionRefundPaymentGatewayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionSendEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionSendEmail(string strCompanyAccount, string strLogin, string strPassword, string strToEmail, string strFromEmail, string strFromName, string strCCEmail, string strBCCEmail, string strSubject, string strBody, string strPriority, string strAttachment, string strServerAddress, string strServerPassword, string strServerUserName) {
            object[] results = this.Invoke("MethodAPIActionSendEmail", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strToEmail,
                        strFromEmail,
                        strFromName,
                        strCCEmail,
                        strBCCEmail,
                        strSubject,
                        strBody,
                        strPriority,
                        strAttachment,
                        strServerAddress,
                        strServerPassword,
                        strServerUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionSendEmailAsync(string strCompanyAccount, string strLogin, string strPassword, string strToEmail, string strFromEmail, string strFromName, string strCCEmail, string strBCCEmail, string strSubject, string strBody, string strPriority, string strAttachment, string strServerAddress, string strServerPassword, string strServerUserName) {
            this.MethodAPIActionSendEmailAsync(strCompanyAccount, strLogin, strPassword, strToEmail, strFromEmail, strFromName, strCCEmail, strBCCEmail, strSubject, strBody, strPriority, strAttachment, strServerAddress, strServerPassword, strServerUserName, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionSendEmailAsync(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string strAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName, 
                    object userState) {
            if ((this.MethodAPIActionSendEmailOperationCompleted == null)) {
                this.MethodAPIActionSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionSendEmailOperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionSendEmail", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strToEmail,
                        strFromEmail,
                        strFromName,
                        strCCEmail,
                        strBCCEmail,
                        strSubject,
                        strBody,
                        strPriority,
                        strAttachment,
                        strServerAddress,
                        strServerPassword,
                        strServerUserName}, this.MethodAPIActionSendEmailOperationCompleted, userState);
        }
        
        private void OnMethodAPIActionSendEmailOperationCompleted(object arg) {
            if ((this.MethodAPIActionSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionSendEmailCompleted(this, new MethodAPIActionSendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionSendEmailV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionSendEmailV2(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string strAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName) {
            object[] results = this.Invoke("MethodAPIActionSendEmailV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strToEmail,
                        strFromEmail,
                        strFromName,
                        strCCEmail,
                        strBCCEmail,
                        strSubject,
                        strBody,
                        strPriority,
                        strAttachment,
                        strServerAddress,
                        strServerPassword,
                        strServerUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionSendEmailV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string strAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName) {
            this.MethodAPIActionSendEmailV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strToEmail, strFromEmail, strFromName, strCCEmail, strBCCEmail, strSubject, strBody, strPriority, strAttachment, strServerAddress, strServerPassword, strServerUserName, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionSendEmailV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string strAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName, 
                    object userState) {
            if ((this.MethodAPIActionSendEmailV2OperationCompleted == null)) {
                this.MethodAPIActionSendEmailV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionSendEmailV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionSendEmailV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strToEmail,
                        strFromEmail,
                        strFromName,
                        strCCEmail,
                        strBCCEmail,
                        strSubject,
                        strBody,
                        strPriority,
                        strAttachment,
                        strServerAddress,
                        strServerPassword,
                        strServerUserName}, this.MethodAPIActionSendEmailV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionSendEmailV2OperationCompleted(object arg) {
            if ((this.MethodAPIActionSendEmailV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionSendEmailV2Completed(this, new MethodAPIActionSendEmailV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionSendEmailV3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionSendEmailV3(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string[] arrAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName) {
            object[] results = this.Invoke("MethodAPIActionSendEmailV3", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strToEmail,
                        strFromEmail,
                        strFromName,
                        strCCEmail,
                        strBCCEmail,
                        strSubject,
                        strBody,
                        strPriority,
                        arrAttachment,
                        strServerAddress,
                        strServerPassword,
                        strServerUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionSendEmailV3Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string[] arrAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName) {
            this.MethodAPIActionSendEmailV3Async(strCompanyAccount, strLogin, strPassword, strSessionID, strToEmail, strFromEmail, strFromName, strCCEmail, strBCCEmail, strSubject, strBody, strPriority, arrAttachment, strServerAddress, strServerPassword, strServerUserName, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionSendEmailV3Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strToEmail, 
                    string strFromEmail, 
                    string strFromName, 
                    string strCCEmail, 
                    string strBCCEmail, 
                    string strSubject, 
                    string strBody, 
                    string strPriority, 
                    string[] arrAttachment, 
                    string strServerAddress, 
                    string strServerPassword, 
                    string strServerUserName, 
                    object userState) {
            if ((this.MethodAPIActionSendEmailV3OperationCompleted == null)) {
                this.MethodAPIActionSendEmailV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionSendEmailV3OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionSendEmailV3", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strToEmail,
                        strFromEmail,
                        strFromName,
                        strCCEmail,
                        strBCCEmail,
                        strSubject,
                        strBody,
                        strPriority,
                        arrAttachment,
                        strServerAddress,
                        strServerPassword,
                        strServerUserName}, this.MethodAPIActionSendEmailV3OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionSendEmailV3OperationCompleted(object arg) {
            if ((this.MethodAPIActionSendEmailV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionSendEmailV3Completed(this, new MethodAPIActionSendEmailV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionSendToDesktop", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionSendToDesktop(string strCompanyAccount, string strLogin, string strPassword, string strTable, string intRecordID) {
            object[] results = this.Invoke("MethodAPIActionSendToDesktop", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionSendToDesktopAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string intRecordID) {
            this.MethodAPIActionSendToDesktopAsync(strCompanyAccount, strLogin, strPassword, strTable, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionSendToDesktopAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string intRecordID, object userState) {
            if ((this.MethodAPIActionSendToDesktopOperationCompleted == null)) {
                this.MethodAPIActionSendToDesktopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionSendToDesktopOperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionSendToDesktop", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intRecordID}, this.MethodAPIActionSendToDesktopOperationCompleted, userState);
        }
        
        private void OnMethodAPIActionSendToDesktopOperationCompleted(object arg) {
            if ((this.MethodAPIActionSendToDesktopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionSendToDesktopCompleted(this, new MethodAPIActionSendToDesktopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIActionSendToDesktopV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIActionSendToDesktopV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string intRecordID) {
            object[] results = this.Invoke("MethodAPIActionSendToDesktopV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIActionSendToDesktopV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string intRecordID) {
            this.MethodAPIActionSendToDesktopV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIActionSendToDesktopV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string intRecordID, object userState) {
            if ((this.MethodAPIActionSendToDesktopV2OperationCompleted == null)) {
                this.MethodAPIActionSendToDesktopV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIActionSendToDesktopV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIActionSendToDesktopV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        intRecordID}, this.MethodAPIActionSendToDesktopV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIActionSendToDesktopV2OperationCompleted(object arg) {
            if ((this.MethodAPIActionSendToDesktopV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIActionSendToDesktopV2Completed(this, new MethodAPIActionSendToDesktopV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIGetCSS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIGetCSS(string strCompanyAccount, string strLogin, string strPassword, string strSessionID) {
            object[] results = this.Invoke("MethodAPIGetCSS", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIGetCSSAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID) {
            this.MethodAPIGetCSSAsync(strCompanyAccount, strLogin, strPassword, strSessionID, null);
        }
        
        /// <remarks/>
        public void MethodAPIGetCSSAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, object userState) {
            if ((this.MethodAPIGetCSSOperationCompleted == null)) {
                this.MethodAPIGetCSSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIGetCSSOperationCompleted);
            }
            this.InvokeAsync("MethodAPIGetCSS", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID}, this.MethodAPIGetCSSOperationCompleted, userState);
        }
        
        private void OnMethodAPIGetCSSOperationCompleted(object arg) {
            if ((this.MethodAPIGetCSSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIGetCSSCompleted(this, new MethodAPIGetCSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIGetScreenURLV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIGetScreenURLV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTabLinkName, string strTabName, string intRecordID) {
            object[] results = this.Invoke("MethodAPIGetScreenURLV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTabLinkName,
                        strTabName,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIGetScreenURLV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTabLinkName, string strTabName, string intRecordID) {
            this.MethodAPIGetScreenURLV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTabLinkName, strTabName, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIGetScreenURLV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTabLinkName, string strTabName, string intRecordID, object userState) {
            if ((this.MethodAPIGetScreenURLV2OperationCompleted == null)) {
                this.MethodAPIGetScreenURLV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIGetScreenURLV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIGetScreenURLV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTabLinkName,
                        strTabName,
                        intRecordID}, this.MethodAPIGetScreenURLV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIGetScreenURLV2OperationCompleted(object arg) {
            if ((this.MethodAPIGetScreenURLV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIGetScreenURLV2Completed(this, new MethodAPIGetScreenURLV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIGetScreenURLV3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIGetScreenURLV3(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string DomainLinkOrMIurl, string TabName, string TabLinkName, string RecordID, string RoleName, string ExpiryDate, bool isPortal, string PortalName) {
            object[] results = this.Invoke("MethodAPIGetScreenURLV3", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        DomainLinkOrMIurl,
                        TabName,
                        TabLinkName,
                        RecordID,
                        RoleName,
                        ExpiryDate,
                        isPortal,
                        PortalName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIGetScreenURLV3Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string DomainLinkOrMIurl, string TabName, string TabLinkName, string RecordID, string RoleName, string ExpiryDate, bool isPortal, string PortalName) {
            this.MethodAPIGetScreenURLV3Async(strCompanyAccount, strLogin, strPassword, strSessionID, DomainLinkOrMIurl, TabName, TabLinkName, RecordID, RoleName, ExpiryDate, isPortal, PortalName, null);
        }
        
        /// <remarks/>
        public void MethodAPIGetScreenURLV3Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string DomainLinkOrMIurl, string TabName, string TabLinkName, string RecordID, string RoleName, string ExpiryDate, bool isPortal, string PortalName, object userState) {
            if ((this.MethodAPIGetScreenURLV3OperationCompleted == null)) {
                this.MethodAPIGetScreenURLV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIGetScreenURLV3OperationCompleted);
            }
            this.InvokeAsync("MethodAPIGetScreenURLV3", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        DomainLinkOrMIurl,
                        TabName,
                        TabLinkName,
                        RecordID,
                        RoleName,
                        ExpiryDate,
                        isPortal,
                        PortalName}, this.MethodAPIGetScreenURLV3OperationCompleted, userState);
        }
        
        private void OnMethodAPIGetScreenURLV3OperationCompleted(object arg) {
            if ((this.MethodAPIGetScreenURLV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIGetScreenURLV3Completed(this, new MethodAPIGetScreenURLV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIGetScreenURLV4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIGetScreenURLV4(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string DomainLinkOrMIurl, string TabName, string TabLinkName, string RecordID, string RoleName, string ExpiryDate, bool isPortal, string PortalName, string PortalEntityRecordID) {
            object[] results = this.Invoke("MethodAPIGetScreenURLV4", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        DomainLinkOrMIurl,
                        TabName,
                        TabLinkName,
                        RecordID,
                        RoleName,
                        ExpiryDate,
                        isPortal,
                        PortalName,
                        PortalEntityRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIGetScreenURLV4Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string DomainLinkOrMIurl, string TabName, string TabLinkName, string RecordID, string RoleName, string ExpiryDate, bool isPortal, string PortalName, string PortalEntityRecordID) {
            this.MethodAPIGetScreenURLV4Async(strCompanyAccount, strLogin, strPassword, strSessionID, DomainLinkOrMIurl, TabName, TabLinkName, RecordID, RoleName, ExpiryDate, isPortal, PortalName, PortalEntityRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIGetScreenURLV4Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string DomainLinkOrMIurl, string TabName, string TabLinkName, string RecordID, string RoleName, string ExpiryDate, bool isPortal, string PortalName, string PortalEntityRecordID, object userState) {
            if ((this.MethodAPIGetScreenURLV4OperationCompleted == null)) {
                this.MethodAPIGetScreenURLV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIGetScreenURLV4OperationCompleted);
            }
            this.InvokeAsync("MethodAPIGetScreenURLV4", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        DomainLinkOrMIurl,
                        TabName,
                        TabLinkName,
                        RecordID,
                        RoleName,
                        ExpiryDate,
                        isPortal,
                        PortalName,
                        PortalEntityRecordID}, this.MethodAPIGetScreenURLV4OperationCompleted, userState);
        }
        
        private void OnMethodAPIGetScreenURLV4OperationCompleted(object arg) {
            if ((this.MethodAPIGetScreenURLV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIGetScreenURLV4Completed(this, new MethodAPIGetScreenURLV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPISmartVaultEnumerateDocuments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPISmartVaultEnumerateDocuments(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strObject, string strListIDorTxnID, int AssignedToRecordID) {
            object[] results = this.Invoke("MethodAPISmartVaultEnumerateDocuments", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strObject,
                        strListIDorTxnID,
                        AssignedToRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPISmartVaultEnumerateDocumentsAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strObject, string strListIDorTxnID, int AssignedToRecordID) {
            this.MethodAPISmartVaultEnumerateDocumentsAsync(strCompanyAccount, strLogin, strPassword, strSessionID, strObject, strListIDorTxnID, AssignedToRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPISmartVaultEnumerateDocumentsAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strObject, string strListIDorTxnID, int AssignedToRecordID, object userState) {
            if ((this.MethodAPISmartVaultEnumerateDocumentsOperationCompleted == null)) {
                this.MethodAPISmartVaultEnumerateDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPISmartVaultEnumerateDocumentsOperationCompleted);
            }
            this.InvokeAsync("MethodAPISmartVaultEnumerateDocuments", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strObject,
                        strListIDorTxnID,
                        AssignedToRecordID}, this.MethodAPISmartVaultEnumerateDocumentsOperationCompleted, userState);
        }
        
        private void OnMethodAPISmartVaultEnumerateDocumentsOperationCompleted(object arg) {
            if ((this.MethodAPISmartVaultEnumerateDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPISmartVaultEnumerateDocumentsCompleted(this, new MethodAPISmartVaultEnumerateDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateField", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateField(string strCompanyAccount, string strLogin, string strPassword, string strTable, string strFieldName, string strFieldType, int intFieldSize, bool blnUnique, bool blnRequired, string strDropdownToTable, string strDropdownToField) {
            object[] results = this.Invoke("MethodAPICreateField", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        strFieldName,
                        strFieldType,
                        intFieldSize,
                        blnUnique,
                        blnRequired,
                        strDropdownToTable,
                        strDropdownToField});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateFieldAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string strFieldName, string strFieldType, int intFieldSize, bool blnUnique, bool blnRequired, string strDropdownToTable, string strDropdownToField) {
            this.MethodAPICreateFieldAsync(strCompanyAccount, strLogin, strPassword, strTable, strFieldName, strFieldType, intFieldSize, blnUnique, blnRequired, strDropdownToTable, strDropdownToField, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateFieldAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string strFieldName, string strFieldType, int intFieldSize, bool blnUnique, bool blnRequired, string strDropdownToTable, string strDropdownToField, object userState) {
            if ((this.MethodAPICreateFieldOperationCompleted == null)) {
                this.MethodAPICreateFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateFieldOperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateField", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        strFieldName,
                        strFieldType,
                        intFieldSize,
                        blnUnique,
                        blnRequired,
                        strDropdownToTable,
                        strDropdownToField}, this.MethodAPICreateFieldOperationCompleted, userState);
        }
        
        private void OnMethodAPICreateFieldOperationCompleted(object arg) {
            if ((this.MethodAPICreateFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateFieldCompleted(this, new MethodAPICreateFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateFieldV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateFieldV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string strFieldName, string strFieldType, int intFieldSize, bool blnUnique, bool blnRequired, string strDropdownToTable, string strDropdownToField) {
            object[] results = this.Invoke("MethodAPICreateFieldV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        strFieldName,
                        strFieldType,
                        intFieldSize,
                        blnUnique,
                        blnRequired,
                        strDropdownToTable,
                        strDropdownToField});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateFieldV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string strFieldName, string strFieldType, int intFieldSize, bool blnUnique, bool blnRequired, string strDropdownToTable, string strDropdownToField) {
            this.MethodAPICreateFieldV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, strFieldName, strFieldType, intFieldSize, blnUnique, blnRequired, strDropdownToTable, strDropdownToField, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateFieldV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string strFieldName, string strFieldType, int intFieldSize, bool blnUnique, bool blnRequired, string strDropdownToTable, string strDropdownToField, object userState) {
            if ((this.MethodAPICreateFieldV2OperationCompleted == null)) {
                this.MethodAPICreateFieldV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateFieldV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateFieldV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        strFieldName,
                        strFieldType,
                        intFieldSize,
                        blnUnique,
                        blnRequired,
                        strDropdownToTable,
                        strDropdownToField}, this.MethodAPICreateFieldV2OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateFieldV2OperationCompleted(object arg) {
            if ((this.MethodAPICreateFieldV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateFieldV2Completed(this, new MethodAPICreateFieldV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateMethodAccountV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateMethodAccountV2(string strCompanyAccount, string strLogin, string strPassword, string strEmail, string strSecurityQuestion, string strSecurityAnswer, bool blnUseExisting, string strAppName, string strDeveloper, string strDeveloperGUID, string strCustomerInfo) {
            object[] results = this.Invoke("MethodAPICreateMethodAccountV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strEmail,
                        strSecurityQuestion,
                        strSecurityAnswer,
                        blnUseExisting,
                        strAppName,
                        strDeveloper,
                        strDeveloperGUID,
                        strCustomerInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodAccountV2Async(string strCompanyAccount, string strLogin, string strPassword, string strEmail, string strSecurityQuestion, string strSecurityAnswer, bool blnUseExisting, string strAppName, string strDeveloper, string strDeveloperGUID, string strCustomerInfo) {
            this.MethodAPICreateMethodAccountV2Async(strCompanyAccount, strLogin, strPassword, strEmail, strSecurityQuestion, strSecurityAnswer, blnUseExisting, strAppName, strDeveloper, strDeveloperGUID, strCustomerInfo, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodAccountV2Async(string strCompanyAccount, string strLogin, string strPassword, string strEmail, string strSecurityQuestion, string strSecurityAnswer, bool blnUseExisting, string strAppName, string strDeveloper, string strDeveloperGUID, string strCustomerInfo, object userState) {
            if ((this.MethodAPICreateMethodAccountV2OperationCompleted == null)) {
                this.MethodAPICreateMethodAccountV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateMethodAccountV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateMethodAccountV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strEmail,
                        strSecurityQuestion,
                        strSecurityAnswer,
                        blnUseExisting,
                        strAppName,
                        strDeveloper,
                        strDeveloperGUID,
                        strCustomerInfo}, this.MethodAPICreateMethodAccountV2OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateMethodAccountV2OperationCompleted(object arg) {
            if ((this.MethodAPICreateMethodAccountV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateMethodAccountV2Completed(this, new MethodAPICreateMethodAccountV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateMethodAccountV3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateMethodAccountV3(
                    string strNewCustomerAccountName, 
                    string strNewCustomerLogin, 
                    string strNewCustomerPassword, 
                    string strSecurityNewCustomerQuestion, 
                    string strSecurityNewCustomerAnswer, 
                    bool blnUseExistingAccount, 
                    string strAppName, 
                    string strDeveloper, 
                    string strDeveloperGUID, 
                    string strNewCustomerFirstName, 
                    string strNewCustomerLastName, 
                    string strNewCustomerAddress, 
                    string strNewCustomerAddressCity, 
                    string strNewCustomerAddressState, 
                    string strNewCustomerAddressCountry, 
                    string strNewCustomerAddressZipCode, 
                    string strNewCustomerCompanyName, 
                    string strNewCustomerContact, 
                    string strNewCustomerPhone, 
                    string strNewCustomerEmail) {
            object[] results = this.Invoke("MethodAPICreateMethodAccountV3", new object[] {
                        strNewCustomerAccountName,
                        strNewCustomerLogin,
                        strNewCustomerPassword,
                        strSecurityNewCustomerQuestion,
                        strSecurityNewCustomerAnswer,
                        blnUseExistingAccount,
                        strAppName,
                        strDeveloper,
                        strDeveloperGUID,
                        strNewCustomerFirstName,
                        strNewCustomerLastName,
                        strNewCustomerAddress,
                        strNewCustomerAddressCity,
                        strNewCustomerAddressState,
                        strNewCustomerAddressCountry,
                        strNewCustomerAddressZipCode,
                        strNewCustomerCompanyName,
                        strNewCustomerContact,
                        strNewCustomerPhone,
                        strNewCustomerEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodAccountV3Async(
                    string strNewCustomerAccountName, 
                    string strNewCustomerLogin, 
                    string strNewCustomerPassword, 
                    string strSecurityNewCustomerQuestion, 
                    string strSecurityNewCustomerAnswer, 
                    bool blnUseExistingAccount, 
                    string strAppName, 
                    string strDeveloper, 
                    string strDeveloperGUID, 
                    string strNewCustomerFirstName, 
                    string strNewCustomerLastName, 
                    string strNewCustomerAddress, 
                    string strNewCustomerAddressCity, 
                    string strNewCustomerAddressState, 
                    string strNewCustomerAddressCountry, 
                    string strNewCustomerAddressZipCode, 
                    string strNewCustomerCompanyName, 
                    string strNewCustomerContact, 
                    string strNewCustomerPhone, 
                    string strNewCustomerEmail) {
            this.MethodAPICreateMethodAccountV3Async(strNewCustomerAccountName, strNewCustomerLogin, strNewCustomerPassword, strSecurityNewCustomerQuestion, strSecurityNewCustomerAnswer, blnUseExistingAccount, strAppName, strDeveloper, strDeveloperGUID, strNewCustomerFirstName, strNewCustomerLastName, strNewCustomerAddress, strNewCustomerAddressCity, strNewCustomerAddressState, strNewCustomerAddressCountry, strNewCustomerAddressZipCode, strNewCustomerCompanyName, strNewCustomerContact, strNewCustomerPhone, strNewCustomerEmail, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodAccountV3Async(
                    string strNewCustomerAccountName, 
                    string strNewCustomerLogin, 
                    string strNewCustomerPassword, 
                    string strSecurityNewCustomerQuestion, 
                    string strSecurityNewCustomerAnswer, 
                    bool blnUseExistingAccount, 
                    string strAppName, 
                    string strDeveloper, 
                    string strDeveloperGUID, 
                    string strNewCustomerFirstName, 
                    string strNewCustomerLastName, 
                    string strNewCustomerAddress, 
                    string strNewCustomerAddressCity, 
                    string strNewCustomerAddressState, 
                    string strNewCustomerAddressCountry, 
                    string strNewCustomerAddressZipCode, 
                    string strNewCustomerCompanyName, 
                    string strNewCustomerContact, 
                    string strNewCustomerPhone, 
                    string strNewCustomerEmail, 
                    object userState) {
            if ((this.MethodAPICreateMethodAccountV3OperationCompleted == null)) {
                this.MethodAPICreateMethodAccountV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateMethodAccountV3OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateMethodAccountV3", new object[] {
                        strNewCustomerAccountName,
                        strNewCustomerLogin,
                        strNewCustomerPassword,
                        strSecurityNewCustomerQuestion,
                        strSecurityNewCustomerAnswer,
                        blnUseExistingAccount,
                        strAppName,
                        strDeveloper,
                        strDeveloperGUID,
                        strNewCustomerFirstName,
                        strNewCustomerLastName,
                        strNewCustomerAddress,
                        strNewCustomerAddressCity,
                        strNewCustomerAddressState,
                        strNewCustomerAddressCountry,
                        strNewCustomerAddressZipCode,
                        strNewCustomerCompanyName,
                        strNewCustomerContact,
                        strNewCustomerPhone,
                        strNewCustomerEmail}, this.MethodAPICreateMethodAccountV3OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateMethodAccountV3OperationCompleted(object arg) {
            if ((this.MethodAPICreateMethodAccountV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateMethodAccountV3Completed(this, new MethodAPICreateMethodAccountV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateTable(string strCompanyAccount, string strLogin, string strPassword, string strTable) {
            object[] results = this.Invoke("MethodAPICreateTable", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateTableAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable) {
            this.MethodAPICreateTableAsync(strCompanyAccount, strLogin, strPassword, strTable, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateTableAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, object userState) {
            if ((this.MethodAPICreateTableOperationCompleted == null)) {
                this.MethodAPICreateTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateTableOperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateTable", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable}, this.MethodAPICreateTableOperationCompleted, userState);
        }
        
        private void OnMethodAPICreateTableOperationCompleted(object arg) {
            if ((this.MethodAPICreateTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateTableCompleted(this, new MethodAPICreateTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateTableV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateTableV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable) {
            object[] results = this.Invoke("MethodAPICreateTableV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateTableV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable) {
            this.MethodAPICreateTableV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateTableV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, object userState) {
            if ((this.MethodAPICreateTableV2OperationCompleted == null)) {
                this.MethodAPICreateTableV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateTableV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateTableV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable}, this.MethodAPICreateTableV2OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateTableV2OperationCompleted(object arg) {
            if ((this.MethodAPICreateTableV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateTableV2Completed(this, new MethodAPICreateTableV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIFieldList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIFieldList(string strCompanyAccount, string strLogin, string strPassword, ref string xmlReturned, string strTable) {
            object[] results = this.Invoke("MethodAPIFieldList", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        xmlReturned,
                        strTable});
            xmlReturned = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIFieldListAsync(string strCompanyAccount, string strLogin, string strPassword, string xmlReturned, string strTable) {
            this.MethodAPIFieldListAsync(strCompanyAccount, strLogin, strPassword, xmlReturned, strTable, null);
        }
        
        /// <remarks/>
        public void MethodAPIFieldListAsync(string strCompanyAccount, string strLogin, string strPassword, string xmlReturned, string strTable, object userState) {
            if ((this.MethodAPIFieldListOperationCompleted == null)) {
                this.MethodAPIFieldListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIFieldListOperationCompleted);
            }
            this.InvokeAsync("MethodAPIFieldList", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        xmlReturned,
                        strTable}, this.MethodAPIFieldListOperationCompleted, userState);
        }
        
        private void OnMethodAPIFieldListOperationCompleted(object arg) {
            if ((this.MethodAPIFieldListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIFieldListCompleted(this, new MethodAPIFieldListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIFieldListV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIFieldListV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable) {
            object[] results = this.Invoke("MethodAPIFieldListV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIFieldListV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable) {
            this.MethodAPIFieldListV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, null);
        }
        
        /// <remarks/>
        public void MethodAPIFieldListV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, object userState) {
            if ((this.MethodAPIFieldListV2OperationCompleted == null)) {
                this.MethodAPIFieldListV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIFieldListV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIFieldListV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable}, this.MethodAPIFieldListV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIFieldListV2OperationCompleted(object arg) {
            if ((this.MethodAPIFieldListV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIFieldListV2Completed(this, new MethodAPIFieldListV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPITableList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPITableList(string strCompanyAccount, string strLogin, string strPassword, ref string xmlReturned) {
            object[] results = this.Invoke("MethodAPITableList", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        xmlReturned});
            xmlReturned = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPITableListAsync(string strCompanyAccount, string strLogin, string strPassword, string xmlReturned) {
            this.MethodAPITableListAsync(strCompanyAccount, strLogin, strPassword, xmlReturned, null);
        }
        
        /// <remarks/>
        public void MethodAPITableListAsync(string strCompanyAccount, string strLogin, string strPassword, string xmlReturned, object userState) {
            if ((this.MethodAPITableListOperationCompleted == null)) {
                this.MethodAPITableListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPITableListOperationCompleted);
            }
            this.InvokeAsync("MethodAPITableList", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        xmlReturned}, this.MethodAPITableListOperationCompleted, userState);
        }
        
        private void OnMethodAPITableListOperationCompleted(object arg) {
            if ((this.MethodAPITableListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPITableListCompleted(this, new MethodAPITableListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPITableListV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPITableListV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID) {
            object[] results = this.Invoke("MethodAPITableListV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPITableListV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID) {
            this.MethodAPITableListV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, null);
        }
        
        /// <remarks/>
        public void MethodAPITableListV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, object userState) {
            if ((this.MethodAPITableListV2OperationCompleted == null)) {
                this.MethodAPITableListV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPITableListV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPITableListV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID}, this.MethodAPITableListV2OperationCompleted, userState);
        }
        
        private void OnMethodAPITableListV2OperationCompleted(object arg) {
            if ((this.MethodAPITableListV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPITableListV2Completed(this, new MethodAPITableListV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIAppointment_CopySeries", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIAppointment_CopySeries(string strCompanyAccount, string strLogin, string strPassword, string strTable, int intCopySeriesFromRecordID, int intCopySeriesToRecordID, string strCopySeriesRecurringDatesOption, string strCopySeriesDeleteExistingOccurrences) {
            object[] results = this.Invoke("MethodAPIAppointment_CopySeries", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intCopySeriesFromRecordID,
                        intCopySeriesToRecordID,
                        strCopySeriesRecurringDatesOption,
                        strCopySeriesDeleteExistingOccurrences});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIAppointment_CopySeriesAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, int intCopySeriesFromRecordID, int intCopySeriesToRecordID, string strCopySeriesRecurringDatesOption, string strCopySeriesDeleteExistingOccurrences) {
            this.MethodAPIAppointment_CopySeriesAsync(strCompanyAccount, strLogin, strPassword, strTable, intCopySeriesFromRecordID, intCopySeriesToRecordID, strCopySeriesRecurringDatesOption, strCopySeriesDeleteExistingOccurrences, null);
        }
        
        /// <remarks/>
        public void MethodAPIAppointment_CopySeriesAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, int intCopySeriesFromRecordID, int intCopySeriesToRecordID, string strCopySeriesRecurringDatesOption, string strCopySeriesDeleteExistingOccurrences, object userState) {
            if ((this.MethodAPIAppointment_CopySeriesOperationCompleted == null)) {
                this.MethodAPIAppointment_CopySeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIAppointment_CopySeriesOperationCompleted);
            }
            this.InvokeAsync("MethodAPIAppointment_CopySeries", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intCopySeriesFromRecordID,
                        intCopySeriesToRecordID,
                        strCopySeriesRecurringDatesOption,
                        strCopySeriesDeleteExistingOccurrences}, this.MethodAPIAppointment_CopySeriesOperationCompleted, userState);
        }
        
        private void OnMethodAPIAppointment_CopySeriesOperationCompleted(object arg) {
            if ((this.MethodAPIAppointment_CopySeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIAppointment_CopySeriesCompleted(this, new MethodAPIAppointment_CopySeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIAppointment_InsertDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIAppointment_InsertDate(string strCompanyAccount, string strLogin, string strPassword, string strTable, int intAppointmentRecordID, string strAppointmentStartDateAndTime, string strAppointmentEndDateAndTime) {
            object[] results = this.Invoke("MethodAPIAppointment_InsertDate", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intAppointmentRecordID,
                        strAppointmentStartDateAndTime,
                        strAppointmentEndDateAndTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIAppointment_InsertDateAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, int intAppointmentRecordID, string strAppointmentStartDateAndTime, string strAppointmentEndDateAndTime) {
            this.MethodAPIAppointment_InsertDateAsync(strCompanyAccount, strLogin, strPassword, strTable, intAppointmentRecordID, strAppointmentStartDateAndTime, strAppointmentEndDateAndTime, null);
        }
        
        /// <remarks/>
        public void MethodAPIAppointment_InsertDateAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, int intAppointmentRecordID, string strAppointmentStartDateAndTime, string strAppointmentEndDateAndTime, object userState) {
            if ((this.MethodAPIAppointment_InsertDateOperationCompleted == null)) {
                this.MethodAPIAppointment_InsertDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIAppointment_InsertDateOperationCompleted);
            }
            this.InvokeAsync("MethodAPIAppointment_InsertDate", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intAppointmentRecordID,
                        strAppointmentStartDateAndTime,
                        strAppointmentEndDateAndTime}, this.MethodAPIAppointment_InsertDateOperationCompleted, userState);
        }
        
        private void OnMethodAPIAppointment_InsertDateOperationCompleted(object arg) {
            if ((this.MethodAPIAppointment_InsertDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIAppointment_InsertDateCompleted(this, new MethodAPIAppointment_InsertDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateMethodTabGroupRoleV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateMethodTabGroupRoleV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string strTabGroupRoleName, string[] arrAssignToUsersArray, string[] arrAssignTabsArray, string blnAllowedToIntegrateAccounting, string blnAllowedToDesignReports) {
            object[] results = this.Invoke("MethodAPICreateMethodTabGroupRoleV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        strTabGroupRoleName,
                        arrAssignToUsersArray,
                        arrAssignTabsArray,
                        blnAllowedToIntegrateAccounting,
                        blnAllowedToDesignReports});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodTabGroupRoleV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string strTabGroupRoleName, string[] arrAssignToUsersArray, string[] arrAssignTabsArray, string blnAllowedToIntegrateAccounting, string blnAllowedToDesignReports) {
            this.MethodAPICreateMethodTabGroupRoleV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strDeveloper, strDeveloperGUID, strTabGroupRoleName, arrAssignToUsersArray, arrAssignTabsArray, blnAllowedToIntegrateAccounting, blnAllowedToDesignReports, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodTabGroupRoleV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string strTabGroupRoleName, string[] arrAssignToUsersArray, string[] arrAssignTabsArray, string blnAllowedToIntegrateAccounting, string blnAllowedToDesignReports, object userState) {
            if ((this.MethodAPICreateMethodTabGroupRoleV2OperationCompleted == null)) {
                this.MethodAPICreateMethodTabGroupRoleV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateMethodTabGroupRoleV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateMethodTabGroupRoleV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        strTabGroupRoleName,
                        arrAssignToUsersArray,
                        arrAssignTabsArray,
                        blnAllowedToIntegrateAccounting,
                        blnAllowedToDesignReports}, this.MethodAPICreateMethodTabGroupRoleV2OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateMethodTabGroupRoleV2OperationCompleted(object arg) {
            if ((this.MethodAPICreateMethodTabGroupRoleV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateMethodTabGroupRoleV2Completed(this, new MethodAPICreateMethodTabGroupRoleV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateMethodTabV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateMethodTabV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string strTabName, string[] strTabGroupRoleNameArray, string[] arrTabLinkNameArray, string[] arrTabLinkScreenArray) {
            object[] results = this.Invoke("MethodAPICreateMethodTabV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        strTabName,
                        strTabGroupRoleNameArray,
                        arrTabLinkNameArray,
                        arrTabLinkScreenArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodTabV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string strTabName, string[] strTabGroupRoleNameArray, string[] arrTabLinkNameArray, string[] arrTabLinkScreenArray) {
            this.MethodAPICreateMethodTabV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strDeveloper, strDeveloperGUID, strTabName, strTabGroupRoleNameArray, arrTabLinkNameArray, arrTabLinkScreenArray, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodTabV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string strTabName, string[] strTabGroupRoleNameArray, string[] arrTabLinkNameArray, string[] arrTabLinkScreenArray, object userState) {
            if ((this.MethodAPICreateMethodTabV2OperationCompleted == null)) {
                this.MethodAPICreateMethodTabV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateMethodTabV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateMethodTabV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        strTabName,
                        strTabGroupRoleNameArray,
                        arrTabLinkNameArray,
                        arrTabLinkScreenArray}, this.MethodAPICreateMethodTabV2OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateMethodTabV2OperationCompleted(object arg) {
            if ((this.MethodAPICreateMethodTabV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateMethodTabV2Completed(this, new MethodAPICreateMethodTabV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPICreateMethodUserV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPICreateMethodUserV2(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strDeveloper, 
                    string strDeveloperGUID, 
                    string[] strTabGroupRoleNameArray, 
                    string strNewUserName, 
                    string strNewUserPassword, 
                    bool blnActive, 
                    string strEmail, 
                    string strSecurityQuestion, 
                    string strSecurityAnswer, 
                    string strDefaultTabGroupRole, 
                    string strEntityFullName, 
                    string strEmailSignature, 
                    bool blnAllowedToAddEditAllTables, 
                    bool blnAllowedToAddEditAllScreens, 
                    bool blnAllowedToCreateNewTables, 
                    bool blnAllowedToCreateNewScreens, 
                    bool blnAllowedAccessToQuickBooksSynchronize, 
                    bool blnAllowedAccessToQuickBooksResolveConflicts, 
                    bool blnAllowedAccessToQuickBooksAuditTrail, 
                    bool blnAllowedAccessToCustomizeMyAccount, 
                    bool blnAllowedAccessToCustomizeDisplay, 
                    bool blnAllowedAccessToCustomizeTablesFields, 
                    bool blnAllowedAccessToCustomizeScreens, 
                    bool blnAllowedAccessToCustomizeTabs, 
                    bool blnAllowedAccessToCustomizeUsers, 
                    bool blnAllowedAccessToCustomizeTabGroupsRoles, 
                    bool blnAllowedAccessToCustomizeThirdPartyPortal, 
                    bool blnAllowedToConnectToMethodAPI, 
                    bool blnCanLogIn) {
            object[] results = this.Invoke("MethodAPICreateMethodUserV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        strTabGroupRoleNameArray,
                        strNewUserName,
                        strNewUserPassword,
                        blnActive,
                        strEmail,
                        strSecurityQuestion,
                        strSecurityAnswer,
                        strDefaultTabGroupRole,
                        strEntityFullName,
                        strEmailSignature,
                        blnAllowedToAddEditAllTables,
                        blnAllowedToAddEditAllScreens,
                        blnAllowedToCreateNewTables,
                        blnAllowedToCreateNewScreens,
                        blnAllowedAccessToQuickBooksSynchronize,
                        blnAllowedAccessToQuickBooksResolveConflicts,
                        blnAllowedAccessToQuickBooksAuditTrail,
                        blnAllowedAccessToCustomizeMyAccount,
                        blnAllowedAccessToCustomizeDisplay,
                        blnAllowedAccessToCustomizeTablesFields,
                        blnAllowedAccessToCustomizeScreens,
                        blnAllowedAccessToCustomizeTabs,
                        blnAllowedAccessToCustomizeUsers,
                        blnAllowedAccessToCustomizeTabGroupsRoles,
                        blnAllowedAccessToCustomizeThirdPartyPortal,
                        blnAllowedToConnectToMethodAPI,
                        blnCanLogIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodUserV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strDeveloper, 
                    string strDeveloperGUID, 
                    string[] strTabGroupRoleNameArray, 
                    string strNewUserName, 
                    string strNewUserPassword, 
                    bool blnActive, 
                    string strEmail, 
                    string strSecurityQuestion, 
                    string strSecurityAnswer, 
                    string strDefaultTabGroupRole, 
                    string strEntityFullName, 
                    string strEmailSignature, 
                    bool blnAllowedToAddEditAllTables, 
                    bool blnAllowedToAddEditAllScreens, 
                    bool blnAllowedToCreateNewTables, 
                    bool blnAllowedToCreateNewScreens, 
                    bool blnAllowedAccessToQuickBooksSynchronize, 
                    bool blnAllowedAccessToQuickBooksResolveConflicts, 
                    bool blnAllowedAccessToQuickBooksAuditTrail, 
                    bool blnAllowedAccessToCustomizeMyAccount, 
                    bool blnAllowedAccessToCustomizeDisplay, 
                    bool blnAllowedAccessToCustomizeTablesFields, 
                    bool blnAllowedAccessToCustomizeScreens, 
                    bool blnAllowedAccessToCustomizeTabs, 
                    bool blnAllowedAccessToCustomizeUsers, 
                    bool blnAllowedAccessToCustomizeTabGroupsRoles, 
                    bool blnAllowedAccessToCustomizeThirdPartyPortal, 
                    bool blnAllowedToConnectToMethodAPI, 
                    bool blnCanLogIn) {
            this.MethodAPICreateMethodUserV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strDeveloper, strDeveloperGUID, strTabGroupRoleNameArray, strNewUserName, strNewUserPassword, blnActive, strEmail, strSecurityQuestion, strSecurityAnswer, strDefaultTabGroupRole, strEntityFullName, strEmailSignature, blnAllowedToAddEditAllTables, blnAllowedToAddEditAllScreens, blnAllowedToCreateNewTables, blnAllowedToCreateNewScreens, blnAllowedAccessToQuickBooksSynchronize, blnAllowedAccessToQuickBooksResolveConflicts, blnAllowedAccessToQuickBooksAuditTrail, blnAllowedAccessToCustomizeMyAccount, blnAllowedAccessToCustomizeDisplay, blnAllowedAccessToCustomizeTablesFields, blnAllowedAccessToCustomizeScreens, blnAllowedAccessToCustomizeTabs, blnAllowedAccessToCustomizeUsers, blnAllowedAccessToCustomizeTabGroupsRoles, blnAllowedAccessToCustomizeThirdPartyPortal, blnAllowedToConnectToMethodAPI, blnCanLogIn, null);
        }
        
        /// <remarks/>
        public void MethodAPICreateMethodUserV2Async(
                    string strCompanyAccount, 
                    string strLogin, 
                    string strPassword, 
                    string strSessionID, 
                    string strDeveloper, 
                    string strDeveloperGUID, 
                    string[] strTabGroupRoleNameArray, 
                    string strNewUserName, 
                    string strNewUserPassword, 
                    bool blnActive, 
                    string strEmail, 
                    string strSecurityQuestion, 
                    string strSecurityAnswer, 
                    string strDefaultTabGroupRole, 
                    string strEntityFullName, 
                    string strEmailSignature, 
                    bool blnAllowedToAddEditAllTables, 
                    bool blnAllowedToAddEditAllScreens, 
                    bool blnAllowedToCreateNewTables, 
                    bool blnAllowedToCreateNewScreens, 
                    bool blnAllowedAccessToQuickBooksSynchronize, 
                    bool blnAllowedAccessToQuickBooksResolveConflicts, 
                    bool blnAllowedAccessToQuickBooksAuditTrail, 
                    bool blnAllowedAccessToCustomizeMyAccount, 
                    bool blnAllowedAccessToCustomizeDisplay, 
                    bool blnAllowedAccessToCustomizeTablesFields, 
                    bool blnAllowedAccessToCustomizeScreens, 
                    bool blnAllowedAccessToCustomizeTabs, 
                    bool blnAllowedAccessToCustomizeUsers, 
                    bool blnAllowedAccessToCustomizeTabGroupsRoles, 
                    bool blnAllowedAccessToCustomizeThirdPartyPortal, 
                    bool blnAllowedToConnectToMethodAPI, 
                    bool blnCanLogIn, 
                    object userState) {
            if ((this.MethodAPICreateMethodUserV2OperationCompleted == null)) {
                this.MethodAPICreateMethodUserV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPICreateMethodUserV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPICreateMethodUserV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        strTabGroupRoleNameArray,
                        strNewUserName,
                        strNewUserPassword,
                        blnActive,
                        strEmail,
                        strSecurityQuestion,
                        strSecurityAnswer,
                        strDefaultTabGroupRole,
                        strEntityFullName,
                        strEmailSignature,
                        blnAllowedToAddEditAllTables,
                        blnAllowedToAddEditAllScreens,
                        blnAllowedToCreateNewTables,
                        blnAllowedToCreateNewScreens,
                        blnAllowedAccessToQuickBooksSynchronize,
                        blnAllowedAccessToQuickBooksResolveConflicts,
                        blnAllowedAccessToQuickBooksAuditTrail,
                        blnAllowedAccessToCustomizeMyAccount,
                        blnAllowedAccessToCustomizeDisplay,
                        blnAllowedAccessToCustomizeTablesFields,
                        blnAllowedAccessToCustomizeScreens,
                        blnAllowedAccessToCustomizeTabs,
                        blnAllowedAccessToCustomizeUsers,
                        blnAllowedAccessToCustomizeTabGroupsRoles,
                        blnAllowedAccessToCustomizeThirdPartyPortal,
                        blnAllowedToConnectToMethodAPI,
                        blnCanLogIn}, this.MethodAPICreateMethodUserV2OperationCompleted, userState);
        }
        
        private void OnMethodAPICreateMethodUserV2OperationCompleted(object arg) {
            if ((this.MethodAPICreateMethodUserV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPICreateMethodUserV2Completed(this, new MethodAPICreateMethodUserV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIDelete(string strCompanyAccount, string strLogin, string strPassword, string strTable, string intRecordID) {
            object[] results = this.Invoke("MethodAPIDelete", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIDeleteAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string intRecordID) {
            this.MethodAPIDeleteAsync(strCompanyAccount, strLogin, strPassword, strTable, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIDeleteAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string intRecordID, object userState) {
            if ((this.MethodAPIDeleteOperationCompleted == null)) {
                this.MethodAPIDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIDeleteOperationCompleted);
            }
            this.InvokeAsync("MethodAPIDelete", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        intRecordID}, this.MethodAPIDeleteOperationCompleted, userState);
        }
        
        private void OnMethodAPIDeleteOperationCompleted(object arg) {
            if ((this.MethodAPIDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIDeleteCompleted(this, new MethodAPIDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIDeleteV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIDeleteV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string intRecordID) {
            object[] results = this.Invoke("MethodAPIDeleteV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIDeleteV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string intRecordID) {
            this.MethodAPIDeleteV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIDeleteV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string intRecordID, object userState) {
            if ((this.MethodAPIDeleteV2OperationCompleted == null)) {
                this.MethodAPIDeleteV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIDeleteV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIDeleteV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        intRecordID}, this.MethodAPIDeleteV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIDeleteV2OperationCompleted(object arg) {
            if ((this.MethodAPIDeleteV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIDeleteV2Completed(this, new MethodAPIDeleteV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIDeleteMethodTabLinkV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIDeleteMethodTabLinkV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string[] arrTabLinkNameArray, string[] arrTabNameArray) {
            object[] results = this.Invoke("MethodAPIDeleteMethodTabLinkV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        arrTabLinkNameArray,
                        arrTabNameArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIDeleteMethodTabLinkV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string[] arrTabLinkNameArray, string[] arrTabNameArray) {
            this.MethodAPIDeleteMethodTabLinkV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strDeveloper, strDeveloperGUID, arrTabLinkNameArray, arrTabNameArray, null);
        }
        
        /// <remarks/>
        public void MethodAPIDeleteMethodTabLinkV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strDeveloper, string strDeveloperGUID, string[] arrTabLinkNameArray, string[] arrTabNameArray, object userState) {
            if ((this.MethodAPIDeleteMethodTabLinkV2OperationCompleted == null)) {
                this.MethodAPIDeleteMethodTabLinkV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIDeleteMethodTabLinkV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIDeleteMethodTabLinkV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strDeveloper,
                        strDeveloperGUID,
                        arrTabLinkNameArray,
                        arrTabNameArray}, this.MethodAPIDeleteMethodTabLinkV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIDeleteMethodTabLinkV2OperationCompleted(object arg) {
            if ((this.MethodAPIDeleteMethodTabLinkV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIDeleteMethodTabLinkV2Completed(this, new MethodAPIDeleteMethodTabLinkV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIFieldServiceTimeEntryV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIFieldServiceTimeEntryV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strProperties) {
            object[] results = this.Invoke("MethodAPIFieldServiceTimeEntryV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strProperties});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIFieldServiceTimeEntryV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strProperties) {
            this.MethodAPIFieldServiceTimeEntryV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strProperties, null);
        }
        
        /// <remarks/>
        public void MethodAPIFieldServiceTimeEntryV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strProperties, object userState) {
            if ((this.MethodAPIFieldServiceTimeEntryV2OperationCompleted == null)) {
                this.MethodAPIFieldServiceTimeEntryV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIFieldServiceTimeEntryV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIFieldServiceTimeEntryV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strProperties}, this.MethodAPIFieldServiceTimeEntryV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIFieldServiceTimeEntryV2OperationCompleted(object arg) {
            if ((this.MethodAPIFieldServiceTimeEntryV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIFieldServiceTimeEntryV2Completed(this, new MethodAPIFieldServiceTimeEntryV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIInsert(string strCompanyAccount, string strLogin, string strPassword, string strTable, string[] arrInsertFieldsArray, string[] arrInsertValueArray, ref string intResponseRecordID) {
            object[] results = this.Invoke("MethodAPIInsert", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        arrInsertFieldsArray,
                        arrInsertValueArray,
                        intResponseRecordID});
            intResponseRecordID = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIInsertAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string[] arrInsertFieldsArray, string[] arrInsertValueArray, string intResponseRecordID) {
            this.MethodAPIInsertAsync(strCompanyAccount, strLogin, strPassword, strTable, arrInsertFieldsArray, arrInsertValueArray, intResponseRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIInsertAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string[] arrInsertFieldsArray, string[] arrInsertValueArray, string intResponseRecordID, object userState) {
            if ((this.MethodAPIInsertOperationCompleted == null)) {
                this.MethodAPIInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIInsertOperationCompleted);
            }
            this.InvokeAsync("MethodAPIInsert", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        arrInsertFieldsArray,
                        arrInsertValueArray,
                        intResponseRecordID}, this.MethodAPIInsertOperationCompleted, userState);
        }
        
        private void OnMethodAPIInsertOperationCompleted(object arg) {
            if ((this.MethodAPIInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIInsertCompleted(this, new MethodAPIInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIInsertV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIInsertV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrInsertFieldsArray, string[] arrInsertValueArray) {
            object[] results = this.Invoke("MethodAPIInsertV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrInsertFieldsArray,
                        arrInsertValueArray});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIInsertV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrInsertFieldsArray, string[] arrInsertValueArray) {
            this.MethodAPIInsertV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, arrInsertFieldsArray, arrInsertValueArray, null);
        }
        
        /// <remarks/>
        public void MethodAPIInsertV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrInsertFieldsArray, string[] arrInsertValueArray, object userState) {
            if ((this.MethodAPIInsertV2OperationCompleted == null)) {
                this.MethodAPIInsertV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIInsertV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIInsertV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrInsertFieldsArray,
                        arrInsertValueArray}, this.MethodAPIInsertV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIInsertV2OperationCompleted(object arg) {
            if ((this.MethodAPIInsertV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIInsertV2Completed(this, new MethodAPIInsertV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIInsertFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIInsertFile(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileAttachment, string strFileName) {
            object[] results = this.Invoke("MethodAPIInsertFile", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrUpdateFieldsArray,
                        fileAttachment,
                        strFileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIInsertFileAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, byte[] fileAttachment, string strFileName) {
            this.MethodAPIInsertFileAsync(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, arrUpdateFieldsArray, fileAttachment, strFileName, null);
        }
        
        /// <remarks/>
        public void MethodAPIInsertFileAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, byte[] fileAttachment, string strFileName, object userState) {
            if ((this.MethodAPIInsertFileOperationCompleted == null)) {
                this.MethodAPIInsertFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIInsertFileOperationCompleted);
            }
            this.InvokeAsync("MethodAPIInsertFile", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrUpdateFieldsArray,
                        fileAttachment,
                        strFileName}, this.MethodAPIInsertFileOperationCompleted, userState);
        }
        
        private void OnMethodAPIInsertFileOperationCompleted(object arg) {
            if ((this.MethodAPIInsertFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIInsertFileCompleted(this, new MethodAPIInsertFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPISelect_DataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPISelect_DataSet(string strCompanyAccount, string strLogin, string strPassword, ref System.Data.DataSet datReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            object[] results = this.Invoke("MethodAPISelect_DataSet", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        datReturnedDataSet,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy});
            datReturnedDataSet = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPISelect_DataSetAsync(string strCompanyAccount, string strLogin, string strPassword, System.Data.DataSet datReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            this.MethodAPISelect_DataSetAsync(strCompanyAccount, strLogin, strPassword, datReturnedDataSet, strTable, strFields, strWhereClause, strGroupByClause, strHaving, strOrderBy, null);
        }
        
        /// <remarks/>
        public void MethodAPISelect_DataSetAsync(string strCompanyAccount, string strLogin, string strPassword, System.Data.DataSet datReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy, object userState) {
            if ((this.MethodAPISelect_DataSetOperationCompleted == null)) {
                this.MethodAPISelect_DataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPISelect_DataSetOperationCompleted);
            }
            this.InvokeAsync("MethodAPISelect_DataSet", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        datReturnedDataSet,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy}, this.MethodAPISelect_DataSetOperationCompleted, userState);
        }
        
        private void OnMethodAPISelect_DataSetOperationCompleted(object arg) {
            if ((this.MethodAPISelect_DataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPISelect_DataSetCompleted(this, new MethodAPISelect_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPISelect_DataSetV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPISelect_DataSetV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, ref System.Data.DataSet datReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            object[] results = this.Invoke("MethodAPISelect_DataSetV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        datReturnedDataSet,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy});
            datReturnedDataSet = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPISelect_DataSetV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, System.Data.DataSet datReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            this.MethodAPISelect_DataSetV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, datReturnedDataSet, strTable, strFields, strWhereClause, strGroupByClause, strHaving, strOrderBy, null);
        }
        
        /// <remarks/>
        public void MethodAPISelect_DataSetV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, System.Data.DataSet datReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy, object userState) {
            if ((this.MethodAPISelect_DataSetV2OperationCompleted == null)) {
                this.MethodAPISelect_DataSetV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPISelect_DataSetV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPISelect_DataSetV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        datReturnedDataSet,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy}, this.MethodAPISelect_DataSetV2OperationCompleted, userState);
        }
        
        private void OnMethodAPISelect_DataSetV2OperationCompleted(object arg) {
            if ((this.MethodAPISelect_DataSetV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPISelect_DataSetV2Completed(this, new MethodAPISelect_DataSetV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPISelect_XML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPISelect_XML(string strCompanyAccount, string strLogin, string strPassword, ref string xmlReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            object[] results = this.Invoke("MethodAPISelect_XML", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        xmlReturnedDataSet,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy});
            xmlReturnedDataSet = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPISelect_XMLAsync(string strCompanyAccount, string strLogin, string strPassword, string xmlReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            this.MethodAPISelect_XMLAsync(strCompanyAccount, strLogin, strPassword, xmlReturnedDataSet, strTable, strFields, strWhereClause, strGroupByClause, strHaving, strOrderBy, null);
        }
        
        /// <remarks/>
        public void MethodAPISelect_XMLAsync(string strCompanyAccount, string strLogin, string strPassword, string xmlReturnedDataSet, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy, object userState) {
            if ((this.MethodAPISelect_XMLOperationCompleted == null)) {
                this.MethodAPISelect_XMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPISelect_XMLOperationCompleted);
            }
            this.InvokeAsync("MethodAPISelect_XML", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        xmlReturnedDataSet,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy}, this.MethodAPISelect_XMLOperationCompleted, userState);
        }
        
        private void OnMethodAPISelect_XMLOperationCompleted(object arg) {
            if ((this.MethodAPISelect_XMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPISelect_XMLCompleted(this, new MethodAPISelect_XMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPISelect_XMLV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPISelect_XMLV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            object[] results = this.Invoke("MethodAPISelect_XMLV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPISelect_XMLV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy) {
            this.MethodAPISelect_XMLV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, strFields, strWhereClause, strGroupByClause, strHaving, strOrderBy, null);
        }
        
        /// <remarks/>
        public void MethodAPISelect_XMLV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string strFields, string strWhereClause, string strGroupByClause, string strHaving, string strOrderBy, object userState) {
            if ((this.MethodAPISelect_XMLV2OperationCompleted == null)) {
                this.MethodAPISelect_XMLV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPISelect_XMLV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPISelect_XMLV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        strFields,
                        strWhereClause,
                        strGroupByClause,
                        strHaving,
                        strOrderBy}, this.MethodAPISelect_XMLV2OperationCompleted, userState);
        }
        
        private void OnMethodAPISelect_XMLV2OperationCompleted(object arg) {
            if ((this.MethodAPISelect_XMLV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPISelect_XMLV2Completed(this, new MethodAPISelect_XMLV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIUpdate(string strCompanyAccount, string strLogin, string strPassword, string strTable, string[] arrUpdateFieldsArray, string[] arrUpdateValueArray, string intRecordID) {
            object[] results = this.Invoke("MethodAPIUpdate", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        arrUpdateFieldsArray,
                        arrUpdateValueArray,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIUpdateAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string[] arrUpdateFieldsArray, string[] arrUpdateValueArray, string intRecordID) {
            this.MethodAPIUpdateAsync(strCompanyAccount, strLogin, strPassword, strTable, arrUpdateFieldsArray, arrUpdateValueArray, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIUpdateAsync(string strCompanyAccount, string strLogin, string strPassword, string strTable, string[] arrUpdateFieldsArray, string[] arrUpdateValueArray, string intRecordID, object userState) {
            if ((this.MethodAPIUpdateOperationCompleted == null)) {
                this.MethodAPIUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIUpdateOperationCompleted);
            }
            this.InvokeAsync("MethodAPIUpdate", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strTable,
                        arrUpdateFieldsArray,
                        arrUpdateValueArray,
                        intRecordID}, this.MethodAPIUpdateOperationCompleted, userState);
        }
        
        private void OnMethodAPIUpdateOperationCompleted(object arg) {
            if ((this.MethodAPIUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIUpdateCompleted(this, new MethodAPIUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIUpdateV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIUpdateV2(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, string[] arrUpdateValueArray, string intRecordID) {
            object[] results = this.Invoke("MethodAPIUpdateV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrUpdateFieldsArray,
                        arrUpdateValueArray,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIUpdateV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, string[] arrUpdateValueArray, string intRecordID) {
            this.MethodAPIUpdateV2Async(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, arrUpdateFieldsArray, arrUpdateValueArray, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIUpdateV2Async(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, string[] arrUpdateValueArray, string intRecordID, object userState) {
            if ((this.MethodAPIUpdateV2OperationCompleted == null)) {
                this.MethodAPIUpdateV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIUpdateV2OperationCompleted);
            }
            this.InvokeAsync("MethodAPIUpdateV2", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrUpdateFieldsArray,
                        arrUpdateValueArray,
                        intRecordID}, this.MethodAPIUpdateV2OperationCompleted, userState);
        }
        
        private void OnMethodAPIUpdateV2OperationCompleted(object arg) {
            if ((this.MethodAPIUpdateV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIUpdateV2Completed(this, new MethodAPIUpdateV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MethodAPIUpdateFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MethodAPIUpdateFile(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileAttachment, string strFileName, string intRecordID) {
            object[] results = this.Invoke("MethodAPIUpdateFile", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrUpdateFieldsArray,
                        fileAttachment,
                        strFileName,
                        intRecordID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MethodAPIUpdateFileAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, byte[] fileAttachment, string strFileName, string intRecordID) {
            this.MethodAPIUpdateFileAsync(strCompanyAccount, strLogin, strPassword, strSessionID, strTable, arrUpdateFieldsArray, fileAttachment, strFileName, intRecordID, null);
        }
        
        /// <remarks/>
        public void MethodAPIUpdateFileAsync(string strCompanyAccount, string strLogin, string strPassword, string strSessionID, string strTable, string[] arrUpdateFieldsArray, byte[] fileAttachment, string strFileName, string intRecordID, object userState) {
            if ((this.MethodAPIUpdateFileOperationCompleted == null)) {
                this.MethodAPIUpdateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMethodAPIUpdateFileOperationCompleted);
            }
            this.InvokeAsync("MethodAPIUpdateFile", new object[] {
                        strCompanyAccount,
                        strLogin,
                        strPassword,
                        strSessionID,
                        strTable,
                        arrUpdateFieldsArray,
                        fileAttachment,
                        strFileName,
                        intRecordID}, this.MethodAPIUpdateFileOperationCompleted, userState);
        }
        
        private void OnMethodAPIUpdateFileOperationCompleted(object arg) {
            if ((this.MethodAPIUpdateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MethodAPIUpdateFileCompleted(this, new MethodAPIUpdateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionChargeCreditCard_ElectraCashCompletedEventHandler(object sender, MethodAPIActionChargeCreditCard_ElectraCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionChargeCreditCard_ElectraCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionChargeCreditCard_ElectraCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strGatewayResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strGatewayApproved {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionChargeCreditCard_ElectraCashV2CompletedEventHandler(object sender, MethodAPIActionChargeCreditCard_ElectraCashV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionChargeCreditCard_ElectraCashV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionChargeCreditCard_ElectraCashV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionChargeCreditCard_PsiGateCompletedEventHandler(object sender, MethodAPIActionChargeCreditCard_PsiGateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionChargeCreditCard_PsiGateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionChargeCreditCard_PsiGateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strGatewayResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strGatewayApproved {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionChargeCreditCard_PsiGateV2CompletedEventHandler(object sender, MethodAPIActionChargeCreditCard_PsiGateV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionChargeCreditCard_PsiGateV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionChargeCreditCard_PsiGateV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionChargePaymentGatewayCompletedEventHandler(object sender, MethodAPIActionChargePaymentGatewayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionChargePaymentGatewayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionChargePaymentGatewayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionRefundCreditCard_ElectraCashV2CompletedEventHandler(object sender, MethodAPIActionRefundCreditCard_ElectraCashV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionRefundCreditCard_ElectraCashV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionRefundCreditCard_ElectraCashV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionRefundCreditCard_PsiGateV2CompletedEventHandler(object sender, MethodAPIActionRefundCreditCard_PsiGateV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionRefundCreditCard_PsiGateV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionRefundCreditCard_PsiGateV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionRefundPaymentGatewayCompletedEventHandler(object sender, MethodAPIActionRefundPaymentGatewayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionRefundPaymentGatewayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionRefundPaymentGatewayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionSendEmailCompletedEventHandler(object sender, MethodAPIActionSendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionSendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionSendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionSendEmailV2CompletedEventHandler(object sender, MethodAPIActionSendEmailV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionSendEmailV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionSendEmailV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionSendEmailV3CompletedEventHandler(object sender, MethodAPIActionSendEmailV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionSendEmailV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionSendEmailV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionSendToDesktopCompletedEventHandler(object sender, MethodAPIActionSendToDesktopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionSendToDesktopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionSendToDesktopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIActionSendToDesktopV2CompletedEventHandler(object sender, MethodAPIActionSendToDesktopV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIActionSendToDesktopV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIActionSendToDesktopV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIGetCSSCompletedEventHandler(object sender, MethodAPIGetCSSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIGetCSSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIGetCSSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIGetScreenURLV2CompletedEventHandler(object sender, MethodAPIGetScreenURLV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIGetScreenURLV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIGetScreenURLV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIGetScreenURLV3CompletedEventHandler(object sender, MethodAPIGetScreenURLV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIGetScreenURLV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIGetScreenURLV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIGetScreenURLV4CompletedEventHandler(object sender, MethodAPIGetScreenURLV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIGetScreenURLV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIGetScreenURLV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPISmartVaultEnumerateDocumentsCompletedEventHandler(object sender, MethodAPISmartVaultEnumerateDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPISmartVaultEnumerateDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPISmartVaultEnumerateDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateFieldCompletedEventHandler(object sender, MethodAPICreateFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateFieldV2CompletedEventHandler(object sender, MethodAPICreateFieldV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateFieldV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateFieldV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateMethodAccountV2CompletedEventHandler(object sender, MethodAPICreateMethodAccountV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateMethodAccountV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateMethodAccountV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateMethodAccountV3CompletedEventHandler(object sender, MethodAPICreateMethodAccountV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateMethodAccountV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateMethodAccountV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateTableCompletedEventHandler(object sender, MethodAPICreateTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateTableV2CompletedEventHandler(object sender, MethodAPICreateTableV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateTableV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateTableV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIFieldListCompletedEventHandler(object sender, MethodAPIFieldListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlReturned {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIFieldListV2CompletedEventHandler(object sender, MethodAPIFieldListV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIFieldListV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIFieldListV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPITableListCompletedEventHandler(object sender, MethodAPITableListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPITableListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPITableListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlReturned {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPITableListV2CompletedEventHandler(object sender, MethodAPITableListV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPITableListV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPITableListV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIAppointment_CopySeriesCompletedEventHandler(object sender, MethodAPIAppointment_CopySeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIAppointment_CopySeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIAppointment_CopySeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIAppointment_InsertDateCompletedEventHandler(object sender, MethodAPIAppointment_InsertDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIAppointment_InsertDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIAppointment_InsertDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateMethodTabGroupRoleV2CompletedEventHandler(object sender, MethodAPICreateMethodTabGroupRoleV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateMethodTabGroupRoleV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateMethodTabGroupRoleV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateMethodTabV2CompletedEventHandler(object sender, MethodAPICreateMethodTabV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateMethodTabV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateMethodTabV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPICreateMethodUserV2CompletedEventHandler(object sender, MethodAPICreateMethodUserV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPICreateMethodUserV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPICreateMethodUserV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIDeleteCompletedEventHandler(object sender, MethodAPIDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIDeleteV2CompletedEventHandler(object sender, MethodAPIDeleteV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIDeleteV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIDeleteV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIDeleteMethodTabLinkV2CompletedEventHandler(object sender, MethodAPIDeleteMethodTabLinkV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIDeleteMethodTabLinkV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIDeleteMethodTabLinkV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIFieldServiceTimeEntryV2CompletedEventHandler(object sender, MethodAPIFieldServiceTimeEntryV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIFieldServiceTimeEntryV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIFieldServiceTimeEntryV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIInsertCompletedEventHandler(object sender, MethodAPIInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string intResponseRecordID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIInsertV2CompletedEventHandler(object sender, MethodAPIInsertV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIInsertV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIInsertV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIInsertFileCompletedEventHandler(object sender, MethodAPIInsertFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIInsertFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIInsertFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPISelect_DataSetCompletedEventHandler(object sender, MethodAPISelect_DataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPISelect_DataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPISelect_DataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet datReturnedDataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPISelect_DataSetV2CompletedEventHandler(object sender, MethodAPISelect_DataSetV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPISelect_DataSetV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPISelect_DataSetV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet datReturnedDataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPISelect_XMLCompletedEventHandler(object sender, MethodAPISelect_XMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPISelect_XMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPISelect_XMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string xmlReturnedDataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPISelect_XMLV2CompletedEventHandler(object sender, MethodAPISelect_XMLV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPISelect_XMLV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPISelect_XMLV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIUpdateCompletedEventHandler(object sender, MethodAPIUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIUpdateV2CompletedEventHandler(object sender, MethodAPIUpdateV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIUpdateV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIUpdateV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MethodAPIUpdateFileCompletedEventHandler(object sender, MethodAPIUpdateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MethodAPIUpdateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MethodAPIUpdateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591